package com.mayday.board.web;

import java.util.List;

import javax.inject.Inject;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.mayday.board.service.IBoardService;
import com.mayday.board.vo.BoardSerchVO;
import com.mayday.board.vo.BoardVO;
import com.mayday.code.service.ICodeService;
import com.mayday.code.vo.CodeVO;
import com.mayday.exception.BizNotEffectedException;
import com.mayday.exception.BizNotFoundException;
import com.mayday.faq.vo.FaqVO;


@Controller
@RequestMapping("/board")
public class BoardController {

	@Inject
	IBoardService boardservice;
	@Inject
	ICodeService codeservice;


	private Logger logger = LoggerFactory.getLogger(this.getClass());

	public List<CodeVO> codeList() {
		List<CodeVO> codeList = codeservice.getCodeList("BOD10 ");
		return codeList;
		
	}
	@RequestMapping("/{parentCd}/boardList")
	public String boardList(@ModelAttribute("searchVO") BoardSerchVO searchvo, Model model,
			@PathVariable("parentCd") String parentCd) {
		logger.debug("searchVO={}", searchvo);
		if (parentCd.equals("notice")) {
			searchvo.setBoardParentCd("BOD30 ");
		} else if (parentCd.equals("question")) {
			searchvo.setBoardParentCd("BOD10 ");
		} else if (parentCd.equals("free")) {
			searchvo.setBoardParentCd("BOD20 ");
		}
		model.addAttribute("searchVO", searchvo);
		try {
			List<BoardVO> boardList = boardservice.getBoardList(searchvo);
			model.addAttribute("boardList", boardList);
		} catch (BizNotFoundException e) {
			model.addAttribute("e", e);
		}
		return "board/boardList";
	}

	@GetMapping("/boardView")
	public String boardView(@RequestParam(value = "boNo", required = true)int boNo, Model model) {
		logger.debug("boNo={}", boNo);
		try {
			boardservice.increaseboard(boNo);
			BoardVO board = boardservice.getboard(boNo);
			model.addAttribute("board", board);
		} catch (BizNotEffectedException|BizNotFoundException e) {
			logger.error("error ={}", e);
			model.addAttribute("e", e);
		}
		return "board/boardView";
	}

	@RequestMapping("/boardForm")
	public String boardForm(@ModelAttribute("board") BoardVO board) {
		return "board/boardForm";
	}

	@RequestMapping("/boardEdit")
	public String boardEdit(@ModelAttribute("board") BoardVO board) {
		
		return "board/boardEdit";
	}

	@RequestMapping("/boardDelete")
	public String boardDelete() {
		return "board/boardDelete";
	}

}
